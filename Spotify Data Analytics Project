/*For this project, I downloaded Spotify data from Kaggle. Then I created a table to insert Spotify data into. Finally, I performed analytics on the data using SQL.*/
/*Create table Spotifydata*/
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

/*Which artists tracks had a popularity of 90 or above?*/
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity >=90
ORDER BY popularity desc;
/*Which artists track had the lowest popularity?*/
SELECT artist_name, track_name, MIN(popularity)
FROM BIT_DB.Spotifydata;
/*What is the average duraction of tracks with a popularity rating of 90 and above?*/
SELECT AVG(duration_ms)
FROM BIT_DB.Spotifydata
WHERE popularity >=90;
/*Which artists track has the lowest popularity & duration?*/
SELECT artist_name, track_name, MIN(duration_ms)
FROM BIT_DB.Spotifydata
WHERE popularity<70;
/*WHO are the artists with the five least danceable tracks?*/
SELECT artist_name, danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability ASC
LIMIT 5;
/*What is the loudest track and how long does it last?*/
SELECT track_name, loudness, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY loudness DESC
LIMIT 1;
/*Which tracks have a higher energy rating than the average?*/
SELECT TRACK_NAME
FROM BIT_DB.Spotifydata
WHERE energy>(SELECT AVG(energy)
FROM BIT_DB.Spotifydata)
ORDER BY energy ASC;
/*Which tracks have a popularity rating equal to the average popularity rating?*/
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
WHERE POPULARITY=(SELECT ROUND(AVG(popularity))
FROM BIT_DB.Spotifydata);
/*How many tracks have a tempo higher than 100 and mode of 1?*/
SELECT COUNT(ID) AS '# of tracks with tempo greater than 100 and mode of 1'
FROM BIT_DB.Spotifydata
WHERE tempo>100 AND song_mode=1;
